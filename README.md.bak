# Collide Jungle Academy

Collide Wizard Academy roept een nieuwe generatie digitale tovenaars van heden en ver samen om de mensheid te redden van een catastrofale ondergang.
Via magische spreuken kunnen er oplossingen gevonden worden om de mensheid te redden van diverse natuurrampen. Maar let opâ€¦ De vervuiling is reeds torenhoog en te veel vervuiling zal fatale gevolgen hebben.

Via fullstack technologieÃ«n ontwikkel je een manier om vergeten API spreuken op te roepen. Maar niet alle spreuken zijn even efficiÃ«nt, met jouw mede tovenaars schrijf je ook nieuwe API spreuken om het spreukenboek te verbeteren!

## TL;DR

Om de mensheid te redden van de ondergang ga je de problemen moeten oplossen door vergeten spreuken te vinden. Deze spreuken kan je vinden door oplossingen te coderen en deze op te sturen (al dan niet per postduif).

Maar maak je geen zorgen. We sturen jullie niet met lege handen de wereld uit. Je krijgt alvast een [spreukenboek](https://htf.bewire.org/swagger-ui.html) om je op weg te helpen.

## Hoe ga je te werk?

Om te beginnen, bedenk samen met je medetovenaar een coole teamnaam. Maak je team aan via onze API door je [teamnaam op te sturen](https://htf.bewire.org/swagger-ui.html#/team-controller/createTeamUsingPOST). Zodra dit gebeurd is, krijg je jouw unieke nummer terug.

```
path: /team
method: POST
body: {"name": "<jouw team naam>"}
```

> **Let op!** vergeet deze zeker niet te noteren ðŸª¶ op een stukje perkament ðŸ“œ en deel deze met niemand ðŸ¤«.

### Queeste starten

Met jouw unieke nummer kan je nu jouw queeste starten. Spreek onze API opnieuw aan en vraag om [een nieuwe queeste te starten](https://htf.bewire.org/swagger-ui.html#/problem-controller/startQuestUsingPOST) met jouw unieke nummer.

Zodra je een queeste hebt gestart komt jouw team tevoorschijn in [het magische dashboard](https://htf-dashboard.bewire.org/).

```
path: /quest
method: POST
query: teamId
```

Je kan altijd je [queeste opnieuw opvragen](https://htf.bewire.org/swagger-ui.html#/problem-controller/getQuestUsingGET) met alle wereldproblemen, mogelijke spreuken en bijbehorende hints, door de volgende endpoint op te roepen:

```
path: /problems/{teamId}
method: GET
```

### Front-end taak

Jouw front-end taak is het ophalen van je queeste, deze stylen, en tonen in een pagina.

Van ons krijg je alvast een web component met een HTML template en de functionaliteit om je antwoord te sturen naar onze API.

Je bent vrij in je keuze van front-end frameworks. Wij hebben een startup project voorzien voor de 3 meest populaire frameworks.

Clone Ã©Ã©n van de volgende repositories.


```
git clone https://github.com/CollideNV/htf-2022-angular.git
```
```
git clone https://github.com/CollideNV/htf-2022-vue.git
```
```
git clone https://github.com/CollideNV/htf-2022-react.git
```

### Gebruik web component

De nodige setup en installatie van de web component is voorzien in de startup projecten.

De component heeft de HTML tag "htf-2022" en accepteert 2 attributen, `quest` en `url`.

#### Attribuut quest

Je kan je queeste als object of als JSON string meegeven.

Voorbeeld angular:
```
<htf-2022 [quest]="quest"></htf-2022>
```
Voorbeeld vue:
```
<htf-2022 .quest="quest"></htf-2022>
```
Voorbeeld react:
```
<htf-2022 quest={JSON.stringify(quest)}></htf-2022>
```

#### Attribuut url

Bij selectie van een spreuk krijg je een button "cast spell" te zien. Als default heb je hiernaast ook een input veld om je antwoord mee te geven.

Je kan optioneel ook uw back-end url meegeven. Dan krijg je geen input veld meer maar haalt de component je antwoord op bij uw back-end.

De component maakt een call naar:

```
url: http://{url}/{spellId}
method: POST
body: ingredients
```

#### Classen

Je kan gebruik maken van de volgende classen om je queeste te stylen:

```
problem
problem-name
description
spell
spell-name
effect
challenge
recipe
ingredients
remainingAttempts
difficulty
```

Optionele classen:

```
solved (van toepassing bij problem en spell)
active (geselcteerde spell)

```

### Wereldproblemen

Met het starten van je queeste worden 3 wereldproblemen op je afgevuurd.

Elk wereldprobleem heeft 3 effectieve spreuken waarvan je minstens 2 correct moet uispreken om een wereldprobleem op te lossen.

### Spreuken vinden

Bij elk probleem krijg je een lijst van spreuken die het probleem mogelijks kunnen verhelpen. Maar let op, niet elke spreuk is even efficiÃ«nt. Hoe efficienter de spreuk, hoe moeilijker de opgave, en hoe hoger de punten gaan zijn.

Bij elke spreuk krijg je de id, de uitleg wat deze doet, het recept (de opgave) en de ingrediÃ«nten (input voor de opgave).

Om [een spreuk af te vuren](https://htf.bewire.org/swagger-ui.html#/problem-controller/castSpellUsingPOST) gebruik je volgende endpoint met je resultaat van de opgave:

```
path: /cast/{spellId}
method: POST
query: ?formula=<jouw oplossing>
```

> **Let op!** Voor sommige spreuken kan je maar een aantal keer de formule van doorgeven voordat dit brouwsel ðŸ§ª ontploft ðŸ’¥. Je kan deze spreuk dan helaas **niet meer oplossen**.
>
> ![Seamus Finnigan from Harry Potter blankly staring at his exploded feather, after failing to cast a levitation spell.](http://images5.fanpop.com/image/answers/2193000/2193846_1322245725814.36res_450_360.jpg)

### Badges & Score

Zodra je een spreuk correct hebt afgevuurd krijg je een badge voor deze spreuk. Je kan jouw behaalde badges bekijken per wereldprobleem op [het magische dashboard](https://htf-dashboard.bewire.org/).

Heb je twee spreuken van een wereld probleem correct uitgevoerd? Dan heb je deze wereldprobleem al goed verholpen en krijg je een score! Je kan ervoor kiezen om de laatste spreuk op te lossen voor een hogere score of een ander wereldprobleem op te lossen. De mensheid bedankt je alvast!

### Queeste opgeven

Mocht je problemen ondervinden met je queeste en wil je liever opnieuw beginnen. Dan kan je jouw queeste stoppen door [de bijbehoorende spreuk](https://htf.bewire.org/swagger-ui.html#/problem-controller/abandonQuestUsingPOST) op te roepen. De score van jouw successvolle wereldproblemen blijf je behouden.

```
path: /quest/{teamId}/abandon
method: POST
```
